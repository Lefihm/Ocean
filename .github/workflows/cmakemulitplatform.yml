name: CMake on multiple platforms

on:
  pull_request:
    branches:
      - actions2

  push:
    branches:
      - actions2

jobs:
  build:
    runs-on: ${{ matrix.sys.os }}

    permissions:
      contents: read

    strategy:
      # Set fail-fast to true when workflow is stable.
      fail-fast: false

      # Set up a matrix to run the following configurations:
      # 
      # 1. <Windows, Debug / Release, latest GCC compiler toolchain>
      # 2. <Linux, Debug / Release, latest GCC compiler toolchain>
      # 3. <Linux, Debug / Release, latest Clang compiler toolchain>
      # 
      matrix:
        sys:
          - { os: windows-latest, shell: bash }
          - { os: ubuntu-latest, shell: bash }

        # build_type: [ Debug, Release ]
        build_type: [ Debug ]

        compiler:
          - { cc: gcc, cxx: g++ }
          # - { cc: clang, cxx: clang++ }

    defaults:
      run:
        # shell: ${{ matrix.sys.shell }}
        shell: ${{ matrix.sys.shell }}

    steps:
      - uses: actions/checkout@v4
        with:
          clean: true

      # From: https://github.com/marketplace/actions/install-vulkan-sdk
      - name: Install Vulkan SDK
        uses: humbletim/install-vulkan-sdk@v1.2
        with:
          version: 1.3.296.0
          cache: true
          quiet: true

      - name: Test Vulkan SDK Install
        shell: bash
        run: |
          echo "Vulkan SDK Version=='$VULKAN_SDK_VERSION'"
          echo "VULKAN_SDK=='$VULKAN_SDK'"
          test -n "$VULKAN_SDK_VERSION"
          glslangValidator --version
      - if: runner.os == 'Linux'
        name: Install Linux Developer Packages
        run: |
          sudo apt install libwayland-dev libxkbcommon-dev xorg-dev
      - name: Cache Submodules
        id: cache-submodules
        uses: actions/cache@v4.2.3
        with:
          # A list of files, directories, and wildcard patterns to cache and restore
          path: |
            Ocean/vendor
          # An explicit key for restoring and saving the cache
          key: ${{ github.ref_name }}-${{ runner.os }}-submodules
          # Enables caching across platforms
          enableCrossOsArchive: true
          # Fail the workflow if a cache entry is not found
          fail-on-cache-miss: false

      - name: Update Git Submodules
        if: steps.cache-submodules.outputs.cache-hit != 'true'
        uses: actions/checkout@v4
        with:
          # Whether to checkout submodules: `true` to checkout submodules or `recursive` to
          # recursively checkout submodules.
          #
          # When the `ssh-key` input is not provided, SSH URLs beginning with
          # `git@github.com:` are converted to HTTPS.
          #
          # Default: false
          submodules: recursive

      # From: https://github.com/marketplace/actions/setup-cpp-c-c
      - name: Setup Build System
        uses: aminya/setup-cpp@v1
        with:
          compiler: ${{ matrix.compiler.cc }}
          cmake: true
          ninja: true

      # From: https://github.com/marketplace/actions/cmake-action
      - name: Configure CMake
        uses: threeal/cmake-action@v2.1.0
        with:
          generator: Ninja
          c-compiler: ${{ matrix.compiler.cc }}
          cxx-compiler: ${{ matrix.compiler.cxx }}

          options: |
            CMAKE_BUILD_TYPE=${{ matrix.build_type }}
            Ocean_BUILD_DLL=ON
            Ocean_BUILD_DOCS=OFF
            Ocean_BUILD_TESTS=ON
      # From: https://github.com/marketplace/actions/ctest-action
      # - name: Test Project
      #   uses: threeal/ctest-action@v1.1.0
      #   with:
      #     build-config: $${{ matrix.build_type }}
